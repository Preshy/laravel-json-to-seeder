<?php

namespace Preshy\LaravelJsonToSeeder\Commands;

use Illuminate\Console\Command;
use Illuminate\Support\Facades\Artisan;

class LaravelJsonToSeederCommand extends Command {

	/**
	 * The name and signature of the console command.
	 *
	**/
    protected $signature = 'make:json-seeder {path}';

    protected $description = 'Create a new seeder class based of a JSON payload';

    public function __construct() {
        parent::__construct();
    }

    /**
	* Import JSON file and generate seeder 
	* @return string
    **/

    public function handle() {
  
		$path = $this->argument('path');
		
        if(file_exists($path)) {

			$explode = explode("/", $path);
			$table = explode(".", $explode[1])[0];

        	$json = json_decode($this->import($path), true);

			$inserts = $this->generateDBImports($table, $json);

			$string = implode("", $inserts);

			$createSeeder = $this->createSeeder($table, $string);

			if($createSeeder) {
				$this->info("Seeder created successfully.");
			} else {
				$this->info("Seeder created unsuccessfully.");
			}

        } else {
            $this->error('File does not exist');  
    	}

	}

	/**
	 * Import the json file
	 *
	 * @param $path
	 * @return void
	 */
	public function import($path) {
		return file_get_contents($path);
	}

	public function generateDBImports($table, $json) {
		$inserts = [];

		$array = [];

		foreach($json as $value) {
			$array[] = $value;
		}

		foreach($array as $data) {
			$code = "";
			foreach($data as $j => $d) {
				$code .= "'$j' => '$d',\n";
			}

$inserts[] = 
"DB::table('$table')->insert([
	$code
]);"."\n\n";

			}

		return $inserts;
	}

	public function createSeeder($table, $data) {
$sample = "<?php

use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;

class ".ucwords($table)."TableSeeder extends Seeder
{
	/**
	 * Run the database seeds.
	 *
	 * @return void
	 */
	public function run()
	{
		/**
		 * Seeder Generated By Laravel Json To Seeder. 
		 */

		".$data."
	}
}
";

	$filename = base_path()."/database/seeds/".ucwords($table).'.php';

	if(file_exists($filename)) {

		$this->error("Seeder already exists");
		exit;

		} else {
		// Create File In Seeder Folder
		$file = \file_put_contents($filename, $sample);
		
		// Call optimize
		Artisan::call('cache:clear');

		if($file) {
			return true;
		} else {
			return false;
		}

		}
	}

}